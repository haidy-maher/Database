<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <!-- CSS LINK -->
  <link rel="stylesheet" href="../css/layout.css">
  <link rel="stylesheet" href="../css/create-edit.css">

  <!-- Font awesome -->
  <script src="https://kit.fontawesome.com/6b11d4a153.js" crossorigin="anonymous"></script>
  <!-- Font -->
  <!-- FONT 1 -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link
    href="https://fonts.googleapis.com/css2?family=Grandiflora+One&family=Rethink+Sans:ital,wght@0,400;0,500;0,600;0,700;0,800;1,400;1,500;1,600;1,700;1,800&family=Silkscreen&display=swap"
    rel="stylesheet">
</head>

<style>

form div{
    margin-bottom: 20px;
}


</style>

<body>
  <%- include('dashboardNav.ejs') %>

    <!-- Main -->
    <div class="main">
      <div class="header">
        <div class="title">
          <h3>Upload Material</h3>
        </div>
      </div>
      <div class="content">
     
   
            <form action="/materialUpload"  id="createForm"  method="POST" enctype="multipart/form-data">
            <div class="form-group">
<label for="pdfFile">Upload PDF:</label>
<input class="form-control" type="file" name="pdfFile" accept="application/pdf" required>
</div>
<div class="form-group">
                <label for="description">Description: (optional)</label>
                <textarea class="form-control" rows="5" type="text" name="description" placeholder="description"></textarea>
            </div>
            <div class="input-field button">
                <input type="submit" value="Upload"> <!-- Changed to 'submit' type -->
              </div>
            </form>

    </div>

    <script>
      document.getElementById('uploadForm').addEventListener('submit', function(event) {
        event.preventDefault();
        var formData = new FormData(this);
        fetch('/materialUpload', {
          method: 'POST',
          body: formData
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.text();
        })
        .catch(error => {
          console.error('Error:', error);
        });
      });
    </script>
</body>

</html>
   
    