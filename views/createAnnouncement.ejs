<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <!-- CSS LINK -->
  <link rel="stylesheet" href="../css/layout.css">
  <link rel="stylesheet" href="../css/create-edit.css">

  <!-- Font awesome -->
  <script src="https://kit.fontawesome.com/6b11d4a153.js" crossorigin="anonymous"></script>
  <!-- Font -->
  <!-- FONT 1 -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link
    href="https://fonts.googleapis.com/css2?family=Grandiflora+One&family=Rethink+Sans:ital,wght@0,400;0,500;0,600;0,700;0,800;1,400;1,500;1,600;1,700;1,800&family=Silkscreen&display=swap"
    rel="stylesheet">
</head>

<body>
  <%- include('dashboardNav.ejs') %>

    <!-- Main -->
    <div class="main">
        <div class="header">
          <div class="title">
            <h3>Create Announcement</h3>
          </div>
        </div>
        <div class="content">
          <form method="POST" id="createForm">
            <div class="form-group">
              <label for="title">Title</label>
              <input type="text" id="title" name="title">
            </div>
      
            <div class="form-group">
              <label for="content">Content</label>
              <textarea id="content" name="content" rows="4"></textarea>
            </div>
      
      
            <!-- You might want to remove the 'Author' field if it's automatically set to the logged-in user -->
      
            <div class="input-field button">
              <input type="submit" value="Create Announcement">
            </div>
          </form>
        </div>
      </div>
      

    <script>
function submitAnnouncementForm(event) {
  event.preventDefault(); // Prevent default form submission
  const form = document.getElementById('createForm');

  const formData = {
    title: form.querySelector('[name="title"]').value,
    content: form.querySelector('[name="content"]').value,
    // author: form.querySelector('[name="author"]').value,
    // Add other fields as needed based on your announcement schema
  };

  fetch('/createannouncement', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(formData),
  })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      // Check if the response is a redirect
      if (response.redirected) {
        window.location.href = response.url; // Redirect to the URL specified by the server
      }
      return response.json(); // Return JSON response from server
    })
    .then(data => {
      console.log('Success:', data);
      // Handle success, e.g., show a success message or redirect
    })
    .catch((error) => {
      console.error('Error:', error);
      // Handle error, e.g., show an error message to the user
    });
}

const form = document.getElementById('createForm');
form.addEventListener('submit', submitAnnouncementForm);


    </script>
</body>

</html>