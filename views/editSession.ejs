<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <!-- CSS LINK -->
  <link rel="stylesheet" href="../css/layout.css">
  <link rel="stylesheet" href="../css/create-edit.css">

  <!-- Font awesome -->
  <script src="https://kit.fontawesome.com/6b11d4a153.js" crossorigin="anonymous"></script>
  <!-- Font -->
  <!-- FONT 1 -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link
    href="https://fonts.googleapis.com/css2?family=Grandiflora+One&family=Rethink+Sans:ital,wght@0,400;0,500;0,600;0,700;0,800;1,400;1,500;1,600;1,700;1,800&family=Silkscreen&display=swap"
    rel="stylesheet">
</head>

<body>

  <%- include('dashboardNav.ejs') %>


    <!-- Main -->
    <div class="main">
      <div class="header">
        <div class="title">
          <h3>Edit Sessions</h3>
        </div>

      </div>
      <div class="content">
        <form id="editForm" action="/updateSession" method="post">
          <div class="form-group">
            <label for="name">Topic Name</label>
            <input type="text" id="name" name="name">
          </div>

          <div class="form-group">
            <label for="date">Date</label>
            <input type="date" id="date" name="date">
          </div>

          <div class="form-group">
            <label for="attendance-number">Attendance Number</label>
            <input type="number" id="attendance-number" name="attendance-number">
          </div>

          <div class="input-field button">
            <input type="submit" value="Update"> <!-- Changed to 'submit' type -->
          </div>
        </form>
      </div>

    </div>
    <script>

  // Function to fetch session details by ID
async function fetchSessionData(sessionId) {
  try {
    const response = await fetch(`/getSession/${sessionId}`);
    if (!response.ok) {
      throw new Error(`Failed to fetch: ${response.status}`);
    }

    const data = await response.json();

    // Populate form fields with session data
    document.getElementById('name').value = data.topicName;
    document.getElementById('date').value = data.date.substring(0, 10); // Extracting the date part
    document.getElementById('attendance-number').value = data.attendanceNumber;

  } catch (error) {
    console.error('Error fetching session data:', error);
    // Handle error, e.g., show an error message to the user
  }
}

// Call fetchSessionData with the session ID from the URL when the page loads
document.addEventListener('DOMContentLoaded', () => {
  const sessionId = getSessionIdFromURL();
  fetchSessionData(sessionId);
});

function getSessionIdFromURL() {
  const url = window.location.href;
  const lastSlashIndex = url.lastIndexOf('/');
  return url.substring(lastSlashIndex + 1);
}

// Function to handle form submission
// Function to handle form submission
function submitSessionForm(event) {
  event.preventDefault(); // Prevent default form submission
  const form = document.getElementById('editForm');
  const sessionId = getSessionIdFromURL(); // Get session ID from URL

  const formData = {
    topicName: form.querySelector('[name="name"]').value, // Update input names to match schema
    date: form.querySelector('[name="date"]').value,
    attendanceNumber: form.querySelector('[name="attendance-number"]').value,
  };

  fetch(`/updateSession/${sessionId}`, { // Include the session ID in the URL
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(formData),
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    // Check if the response is a redirect
    if (response.redirected) {
      window.location.href = response.url; // Redirect to the URL specified by the server
    }
    return response.json(); // Return JSON response from server
  })
  .then(data => {
    console.log('Success:', data);
    // Handle success, e.g., show a success message or redirect
  })
  .catch((error) => {
    console.error('Error:', error);
    // Handle error, e.g., show an error message to the user
  });
}


const form = document.getElementById('editForm');
form.addEventListener('submit', submitSessionForm);


</script>

</body>

</html>